// ุงุณุชูุฑุงุฏ ููุชุจุฉ Gradio ููุชุนุงูู ูุน ุงูู API
import { Client } from "https://cdn.jsdelivr.net/npm/@gradio/client/dist/index.min.js";

/**
 * ููุงุณ ููุชุนุงูู ูุน ุดุงุช ุจูุช ุชุนููู ุงูุฅูุฌููุฒูุฉ
 * ุจูุณุชุฎุฏู API ุงูุฎุงุต ุจุงูุจูุช ุงููู ุนูู Hugging Face
 */
export class EnglishChatBotAPI {
    constructor() {
        // ุฑุงุจุท ุงูู API ุงูุฎุงุต ุจุงูุจูุช ุจุชุงุนู
        this.API_URL = "YoussefA7med/ChatBot_English_Helper";
        this.client = null;
        
        // ูุชุบูุฑุงุช ูุญูุธ ุญุงูุฉ ุงููุญุงุฏุซุฉ
        this.chatHistory = [];
        this.transcript = "";
        this.corrections = "";
        
        // ุฅุนุฏุงุฏ ุงูููุงุณ ุนูุฏ ุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ
        this.initialize();
    }

    /**
     * ุฏุงูุฉ ูุชููุฆุฉ ุงูุงุชุตุงู ุจุงูู API
     * ุจุชุชุตู ุจุงูุณูุฑูุฑ ูุชุฌูุฒ ูู ุญุงุฌุฉ
     */
    async initialize() {
        try {
            console.log("๐ ุจุฏุก ุงูุงุชุตุงู ุจุงูุดุงุช ุจูุช...");
            
            // ุงูุงุชุตุงู ุจุงูู API
            this.client = await Client.connect(this.API_URL);
            
            console.log("โ ุชู ุงูุงุชุตุงู ุจูุฌุงุญ!");
            
            // ุชููุฆุฉ ุงููุญุงุฏุซุฉ ูุงูุญุตูู ุนูู ุฑุณุงูุฉ ุงูุชุฑุญูุจ
            await this.initializeChat();
            
        } catch (error) {
            console.error("โ ุฎุทุฃ ูู ุงูุงุชุตุงู:", error);
            throw new Error("ูุดู ูู ุงูุงุชุตุงู ุจุงูุดุงุช ุจูุช");
        }
        finally{
            
        }
    }

    /**
     * ุฏุงูุฉ ูุชููุฆุฉ ุงููุญุงุฏุซุฉ ูุงูุญุตูู ุนูู ุฑุณุงูุฉ ุงูุชุฑุญูุจ
     * ุจุชุณุชุฏุนู endpoint ุงูุฎุงุต ุจุงูุชููุฆุฉ
     */
    async initializeChat() {
        try {
            console.log("๐ฌ ุชููุฆุฉ ุงููุญุงุฏุซุฉ...");
            
            // ุงุณุชุฏุนุงุก API ูุชููุฆุฉ ุงููุญุงุฏุซุฉ
            const result = await this.client.predict("/initialize_chat", {});
            
            // ุญูุธ ุงููุชุงุฆุฌ ูู ุงููุชุบูุฑุงุช
            this.chatHistory = result.data[0];
            const welcomeAudio = result.data[1];
            this.transcript = result.data[2];
            this.corrections = result.data[3];
            
            console.log("โ ุชู ุชููุฆุฉ ุงููุญุงุฏุซุฉ ุจูุฌุงุญ!");
            console.log("๐ฌ ุฑุณุงูุฉ ุงูุชุฑุญูุจ:", this.transcript);
            
            // ูู ููู ุตูุช ุชุฑุญูุจุ ูุดุบูู
            if (welcomeAudio) {
                console.log("๐ ุชู ุงุณุชูุงู ุตูุช ุงูุชุฑุญูุจ");
                this.playAudio(welcomeAudio);
            }
            
            return {
                history: this.chatHistory,
                transcript: this.transcript,
                corrections: this.corrections,
                audio: welcomeAudio
            };
            
        } catch (error) {
            console.error("โ ุฎุทุฃ ูู ุชููุฆุฉ ุงููุญุงุฏุซุฉ:", error);
            throw error;
        }
    }

    /**
     * ุฏุงูุฉ ูุฅุฑุณุงู ููู ุตูุชู ููุจูุช ูุงูุญุตูู ุนูู ุฑุฏ
     * @param {File|Blob} audioFile - ููู ุงูุตูุช ุงููุฑุงุฏ ุฅุฑุณุงูู
     * @returns {Object} - ุฑุฏ ุงูุจูุช ูุน ุงูุตูุช ูุงููุต ูุงูุชุตุญูุญุงุช
     */
    async sendAudio(audioFile) {
        try {
            console.log("๐ค ุฅุฑุณุงู ุงูููู ุงูุตูุชู...");
            
            // ุงูุชุฃูุฏ ูู ูุฌูุฏ ุงุชุตุงู
            if (!this.client) {
                throw new Error("ูู ูุชู ุชููุฆุฉ ุงูุงุชุตุงู ุจุนุฏ");
            }
            
            // ุฅุฑุณุงู ุงูููู ุงูุตูุชู ูุน ุจูุงูุงุช ุงููุญุงุฏุซุฉ ุงูุญุงููุฉ
            const result = await this.client.predict("/process_audio", {
                audio: audioFile,
                history: this.chatHistory,
                transcript: this.transcript,
                corrections: this.corrections
            });
            
            // ุงุณุชุฎุฑุงุฌ ุงููุชุงุฆุฌ
            this.chatHistory = result.data[0];
            const responseAudio = result.data[1];
            this.transcript = result.data[2];
            this.corrections = result.data[3];
            
            console.log("โ ุชู ุงุณุชูุงู ุฑุฏ ุงูุจูุช!");
            console.log("๐ ุงููุต ุงูุฌุฏูุฏ:", this.transcript);
            console.log("๐ ุงูุชุตุญูุญุงุช:", this.corrections);
            
            // ุชุดุบูู ุงูุตูุช ูู ูุชุงุญ
            if (responseAudio) {
                console.log("๐ ุชุดุบูู ุฑุฏ ุงูุจูุช ุงูุตูุชู...");
                this.playAudio(responseAudio);
            }
            
            return {
                history: this.chatHistory,
                transcript: this.transcript,
                corrections: this.corrections,
                audio: responseAudio
            };
            
        } catch (error) {
            console.error("โ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุตูุช:", error);
            throw error;
        }
    }

    /**
     * ุฏุงูุฉ ููุณุญ ุงููุญุงุฏุซุฉ ูุงูุจุฏุก ูู ุฌุฏูุฏ
     * ุจุชุณุชุฏุนู endpoint ุงูุฎุงุต ุจุงููุณุญ
     */
    async clearChat() {
        try {
            console.log("๐งน ูุณุญ ุงููุญุงุฏุซุฉ...");
            
            // ุงุณุชุฏุนุงุก API ููุณุญ ุงููุญุงุฏุซุฉ
            const result = await this.client.predict("/clear_chat", {});
            
            // ุฅุนุงุฏุฉ ุชุนููู ุงููุชุบูุฑุงุช
            this.chatHistory = result.data[0];
            const newWelcomeAudio = result.data[1];
            this.transcript = result.data[2];
            this.corrections = result.data[3];
            
            console.log("โ ุชู ูุณุญ ุงููุญุงุฏุซุฉ ูุฅุนุงุฏุฉ ุงูุชููุฆุฉ!");
            
            // ุชุดุบูู ุฑุณุงูุฉ ุงูุชุฑุญูุจ ุงูุฌุฏูุฏุฉ
            if (newWelcomeAudio) {
                this.playAudio(newWelcomeAudio);
            }
            
            return {
                history: this.chatHistory,
                transcript: this.transcript,
                corrections: this.corrections,
                audio: newWelcomeAudio
            };
            
        } catch (error) {
            console.error("โ ุฎุทุฃ ูู ูุณุญ ุงููุญุงุฏุซุฉ:", error);
            throw error;
        }
    }

    /**
     * ุฏุงูุฉ ูุชุดุบูู ุงูููู ุงูุตูุชู
     * @param {string} audioUrl - ุฑุงุจุท ุงูููู ุงูุตูุชู
     */
    playAudio(audioUrl) {
        try {
            // ุฅูุดุงุก ุนูุตุฑ audio ุฌุฏูุฏ
            const audio = new Audio(audioUrl.url);
            // audio.setAttribute("src",audioUrl)
            // console.log(audioUrl);
            
            
            // ุชุดุบูู ุงูุตูุช
            audio.play().catch(error => {
                console.error("โ ุฎุทุฃ ูู ุชุดุบูู ุงูุตูุช:", error);
            });
            
            console.log("๐ ุชู ุชุดุบูู ุงูุตูุช");
            
        } catch (error) {
            console.error("โ ุฎุทุฃ ูู ุชุดุบูู ุงูุตูุช:", error);
        }
    }

    /**
     * ุฏุงูุฉ ูุชุณุฌูู ุงูุตูุช ูู ุงููููุฑูููู
     * @param {number} duration - ูุฏุฉ ุงูุชุณุฌูู ุจุงูุซูุงูู (ุงูุชุฑุงุถู: 5 ุซูุงูู)
     * @returns {Promise<Blob>} - ููู ุงูุตูุช ุงููุณุฌู
     */
    async recordAudio(duration = 5) {
        try {
            console.log("๐ค ุจุฏุก ุชุณุฌูู ุงูุตูุช...");
            
            // ุทูุจ ุฅุฐู ุงุณุชุฎุฏุงู ุงููููุฑูููู
            const stream = await navigator.mediaDevices.getUserMedia({ audio: true });
            
            // ุฅูุดุงุก ูุณุฌู ุงูุตูุช
            const mediaRecorder = new MediaRecorder(stream);
            const audioChunks = [];
            
            // ุชุฌููุน ูุทุน ุงูุตูุช
            mediaRecorder.ondataavailable = (event) => {
                audioChunks.push(event.data);
            };
            
            // ุฅูุดุงุก promise ููุงูุชุธุงุฑ ุญุชู ุงูุชูุงุก ุงูุชุณุฌูู
            const recordingPromise = new Promise((resolve) => {
                mediaRecorder.onstop = () => {
                    // ุชุญููู ุงููุทุน ุฅูู ููู ุตูุชู
                    const audioBlob = new Blob(audioChunks, { type: 'audio/wav' });
                    resolve(audioBlob);
                };
            });
            
            // ุจุฏุก ุงูุชุณุฌูู
            mediaRecorder.start();
            
            // ุฅููุงู ุงูุชุณุฌูู ุจุนุฏ ุงููุฏุฉ ุงููุญุฏุฏุฉ
            setTimeout(() => {
                mediaRecorder.stop();
                stream.getTracks().forEach(track => track.stop());
                console.log("โน๏ธ ุชู ุฅููุงู ุงูุชุณุฌูู");
            }, duration * 1000);
            
            console.log(`โบ๏ธ ุฌุงุฑู ุงูุชุณุฌูู ููุฏุฉ ${duration} ุซุงููุฉ...`);
            
            return await recordingPromise;
            
        } catch (error) {
            console.error("โ ุฎุทุฃ ูู ุชุณุฌูู ุงูุตูุช:", error);
            throw error;
        }
    }

    /**
     * ุฏุงูุฉ ููุญุตูู ุนูู ุชุงุฑูุฎ ุงููุญุงุฏุซุฉ ุงูุญุงูู
     * @returns {Array} - ุชุงุฑูุฎ ุงููุญุงุฏุซุฉ
     */
    getChatHistory() {
        return this.chatHistory;
    }

    /**
     * ุฏุงูุฉ ููุญุตูู ุนูู ุงููุต ุงููุงูู ูููุญุงุฏุซุฉ
     * @returns {string} - ุงููุต ุงููุงูู
     */
    getTranscript() {
        return this.transcript;
    }

    /**
     * ุฏุงูุฉ ููุญุตูู ุนูู ุงูุชุตุญูุญุงุช ูุงูุงูุชุฑุงุญุงุช
     * @returns {string} - ุงูุชุตุญูุญุงุช ูุงูุงูุชุฑุงุญุงุช
     */
    getCorrections() {
        return this.corrections;
    }
}

// =======================
// ุฃูุซูุฉ ุนูู ุงูุงุณุชุฎุฏุงู
// =======================

/**
 * ูุซุงู ุฃุณุงุณู ุนูู ุงุณุชุฎุฏุงู ุงูุดุงุช ุจูุช
 */
async function basicExample() {
    try {
        console.log("๐ ุจุฏุก ุงููุซุงู ุงูุฃุณุงุณู...");
        
        // ุฅูุดุงุก ูุงุฆู ุฌุฏูุฏ ูู ุงูุดุงุช ุจูุช
        const chatBot = new EnglishChatBotAPI();
        
        // ุงูุชุธุงุฑ ุชููุฆุฉ ุงูุงุชุตุงู
        await new Promise(resolve => setTimeout(resolve, 3000));
        
        // ุชุณุฌูู ุตูุช ููุฏุฉ 5 ุซูุงูู
        const audioFile = await chatBot.recordAudio(5);
        
        // ุฅุฑุณุงู ุงูุตูุช ูุงูุญุตูู ุนูู ุฑุฏ
        const response = await chatBot.sendAudio(audioFile);
        
        console.log("๐ ูุชูุฌุฉ ุงููุญุงุฏุซุฉ:");
        console.log("- ุงููุต:", response.transcript);
        console.log("- ุงูุชุตุญูุญุงุช:", response.corrections);
        
    } catch (error) {
        console.error("โ ุฎุทุฃ ูู ุงููุซุงู:", error);
    }
}

/**
 * ูุซุงู ูุชูุฏู ูุน ูุงุฌูุฉ HTML
 */
function createChatInterface() {
    // ุฅูุดุงุก HTML ูููุงุฌูุฉ
    const interfaceHTML = `
        <div id="chat-container" style="max-width: 800px; margin: 0 auto; padding: 20px;">
            <h2>๐ ุดุงุช ุจูุช ุชุนููู ุงูุฅูุฌููุฒูุฉ</h2>
            
            <div id="chat-messages" style="height: 400px; overflow-y: auto; border: 1px solid #ccc; padding: 10px; margin-bottom: 20px;"></div>
            
            <div style="display: flex; gap: 10px; margin-bottom: 20px;">
                <button id="record-btn" style="flex: 1; padding: 10px; background: #007bff; color: white; border: none; border-radius: 5px;">
                    ๐ค ุชุณุฌูู ุงูุตูุช
                </button>
                <button id="clear-btn" style="flex: 1; padding: 10px; background: #dc3545; color: white; border: none; border-radius: 5px;">
                    ๐งน ูุณุญ ุงููุญุงุฏุซุฉ
                </button>
            </div>
            
            <div id="corrections" style="background: #f8f9fa; padding: 15px; border-radius: 5px; min-height: 100px;">
                <h4>๐ ุงูุชุตุญูุญุงุช ูุงูุงูุชุฑุงุญุงุช</h4>
                <p id="corrections-text">ุณูุชู ุนุฑุถ ุงูุชุตุญูุญุงุช ููุง...</p>
            </div>
        </div>
    `;
    
    // ุฅุถุงูุฉ ุงููุงุฌูุฉ ุฅูู ุงูุตูุญุฉ
    document.body.innerHTML = interfaceHTML;
    
    // ุฅูุดุงุก ูุงุฆู ุงูุดุงุช ุจูุช
    const chatBot = new EnglishChatBotAPI();
    
    // ูุชุบูุฑุงุช ูููุงุฌูุฉ
    let isRecording = false;
    
    // ุนูุงุตุฑ ุงููุงุฌูุฉ
    const messagesDiv = document.getElementById('chat-messages');
    const recordBtn = document.getElementById('record-btn');
    const clearBtn = document.getElementById('clear-btn');
    const correctionsText = document.getElementById('corrections-text');
    
    /**
     * ุฏุงูุฉ ูุฅุถุงูุฉ ุฑุณุงูุฉ ุฌุฏูุฏุฉ ูููุงุฌูุฉ
     */
    function addMessage(sender, message, isAudio = false) {
        const messageDiv = document.createElement('div');
        messageDiv.style.cssText = `
            margin: 10px 0;
            padding: 10px;
            border-radius: 10px;
            ${sender === 'ุฃูุช' ? 'background: #007bff; color: white; text-align: right;' : 'background: #f8f9fa; color: black;'}
        `;
        
        messageDiv.innerHTML = `
            <strong>${sender}:</strong> ${message}
            ${isAudio ? '<br>๐ <em>ุชู ุชุดุบูู ุงูุฑุฏ ุงูุตูุชู</em>' : ''}
        `;
        
        messagesDiv.appendChild(messageDiv);
        messagesDiv.scrollTop = messagesDiv.scrollHeight;
    }
    
    /**
     * ุฏุงูุฉ ูุชุญุฏูุซ ุงูุชุตุญูุญุงุช
     */
    function updateCorrections(corrections) {
        correctionsText.textContent = corrections || 'ูุง ุชูุฌุฏ ุชุตุญูุญุงุช ุญุชู ุงูุขู';
    }
    
    // ุฃุญุฏุงุซ ุงูุฃุฒุฑุงุฑ
    recordBtn.addEventListener('click', async () => {
        if (isRecording) return;
        
        try {
            isRecording = true;
            recordBtn.textContent = 'โบ๏ธ ุฌุงุฑู ุงูุชุณุฌูู...';
            recordBtn.disabled = true;
            
            // ุชุณุฌูู ุงูุตูุช
            const audioFile = await chatBot.recordAudio(5);
            
            // ุฅุฑุณุงู ุงูุตูุช
            const response = await chatBot.sendAudio(audioFile);
            
            // ุชุญุฏูุซ ุงููุงุฌูุฉ
            addMessage('ุฃูุช', 'ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุตูุชูุฉ', true);
            addMessage('ุณุงู', 'ุชู ุงูุฑุฏ ุนูู ุฑุณุงูุชู', true);
            updateCorrections(response.corrections);
            
        } catch (error) {
            console.error('ุฎุทุฃ ูู ุงูุชุณุฌูู:', error);
            addMessage('ุงููุธุงู', 'ุญุฏุซ ุฎุทุฃ ูู ุงูุชุณุฌูู');
        } finally {
            isRecording = false;
            recordBtn.textContent = '๐ค ุชุณุฌูู ุงูุตูุช';
            recordBtn.disabled = false;
        }
    });
    
    clearBtn.addEventListener('click', async () => {
        try {
            await chatBot.clearChat();
            messagesDiv.innerHTML = '';
            updateCorrections('');
            addMessage('ุงููุธุงู', 'ุชู ูุณุญ ุงููุญุงุฏุซุฉ ูุฅุนุงุฏุฉ ุงูุชููุฆุฉ');
        } catch (error) {
            console.error('ุฎุทุฃ ูู ูุณุญ ุงููุญุงุฏุซุฉ:', error);
        }
    });
    
    // ุฑุณุงูุฉ ุงูุชุฑุญูุจ
    setTimeout(() => {
        addMessage('ุณุงู', 'ูุฑุญุจุงู! ุฃูุง ุณุงูุ ูุฏุฑุณ ุงููุบุฉ ุงูุฅูุฌููุฒูุฉ. ุงุถุบุท ุนูู ุฒุฑ ุงูุชุณุฌูู ูุจุฏุก ุงููุญุงุฏุซุฉ!');
    }, 2000);
}

// ุชุตุฏูุฑ ุงูููุงุณ ููุงุณุชุฎุฏุงู
export default EnglishChatBotAPI;

// ุชุตุฏูุฑ ุงูุฏูุงู ุงููุณุงุนุฏุฉ
export { basicExample, createChatInterface };

// =======================
// ูุตุงุฆุญ ููุงุณุชุฎุฏุงู
// =======================

/*
๐ก ูุตุงุฆุญ ูููุฉ:

1. ุชุฃูุฏ ูู ุชุซุจูุช ููุชุจุฉ @gradio/client:
   npm install @gradio/client

2. ุงุณุชุฎุฏู ุงูููุงุณ ุจุงูุทุฑููุฉ ุฏู:
   const chatBot = new EnglishChatBotAPI();

3. ูุชุณุฌูู ุงูุตูุช ูุฅุฑุณุงูู:
   const audioFile = await chatBot.recordAudio(5);
   const response = await chatBot.sendAudio(audioFile);

4. ููุณุญ ุงููุญุงุฏุซุฉ:
   await chatBot.clearChat();

5. ููุญุตูู ุนูู ุจูุงูุงุช ุงููุญุงุฏุซุฉ:
   const history = chatBot.getChatHistory();
   const transcript = chatBot.getTranscript();
   const corrections = chatBot.getCorrections();

6. ุชุฃูุฏ ูู ุงูุณูุงุญ ูููููุน ุจุงููุตูู ูููููุฑูููู

7. ุงูููุฏ ููุชูุจ ุจู ES6 modulesุ ุชุฃูุฏ ูู ุฏุนู ุงููุชุตูุญ
*/